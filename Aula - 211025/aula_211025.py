# -*- coding: utf-8 -*-
"""Aula - 211025.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19dM4pZY3kQZs_SGywPS76TUM9MkHqH5w
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Exemplo de dados
distancia = np.array([8.0, 6.0, 15.0, 20.0, 25.0, 11.0, 5.0, 32.0, 28.0, 20.0])
tempo = np.array([15, 20, 20, 40, 50, 25, 10, 55, 35, 30])

"""**Médias**"""

x = distancia
y = tempo
x_mean = x.mean()
y_mean = y.mean()
print("X Mean: ", x_mean)
print("Y Mean: ", y_mean)

"""**Cálculo dos coeficientes da regressão**"""

beta = np.sum((x - x_mean) * (y - y_mean)) / np.sum((x - x_mean) ** 2)
print("Beta: ", beta)
alpha = y_mean - beta * x_mean
print("Alpha: ", alpha)

y_hat = alpha + beta * x
erro = y - y_hat
erro2 = erro ** 2
print(y_hat)

"""**Calculando o R² e correlação**"""

SSE = np.sum(erro2)
SST = np.sum((y - y_mean) ** 2)
R2 = 1 - SSE/SST
print("R²: ", R2)

#Correlação de postos de Spearman
corr = np.corrcoef(x, y)[0,1]

"""**Exibir os resultados**"""

df = pd.DataFrame({
    "Tempo (Y)": y,
    "Distância (X)": x,
    "Tempo Estimado (Y chapéu)": y_hat,
    "Erro (e)": erro,
    "Erro² (e²)": erro2
})

print("========= Tabela de cálculo ===========")
print(df.round(3))
print("======= Parâmetros da Regressão ========")
print(f"Alpha (intercepto) = {alpha:.4f}")
print(f"Beta (inclinação) = {beta:.4f}")
print(f"R² = {R2:.4f}")
print(f"Correlação (sperman) = {corr:.4f}")

"""**Gráfico**"""

plt.figure(figsize=(7, 5))
plt.scatter(x, y, color="blue", label="Dados Observados")

# Geração da reta da regressão
x_line = np.linspace(x.min(), x.max(), 100)
y_line = alpha + beta * x_line
plt.plot(x_line, y_line, color="red", label="Reta da Regressão")

# Ajustes do gráfico
plt.xlabel("Distância")
plt.ylabel("Tempo")
plt.title("Regressão Linear Simples")
plt.legend()
plt.grid(True)
plt.show()